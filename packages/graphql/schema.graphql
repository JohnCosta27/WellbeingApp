# ------------------------------------- #
# Brand Words                           #
# Preset from a common list of words    #
# ------------------------------------- #

type BrandWords {
  id: String!
  word: String!
}

# Users current brand, they can save this brand
# and create a new one, at which point this will reset.

type UserBrand {
  # words represents the users CURRENT active brand, naming could be better.
  words: [BrandWords!]!
  pastBrand: [PastUserBrand!]!
}

type PastUserBrand {
  words: [BrandWords!]!
  date: Float
  name: String!
}

# ------------------------------------- #
# Mental Energy                         #
# ------------------------------------- #

type MentalEnergy {
  date: Float!
  level: Float!
}

# ------------------------------------- #
# How Am I                              #
# Preset from words                     #
# Accessable to the user with a date    #
# ------------------------------------- #

type HowAmIPhrase {
  id: String!
  phrase: String!
  date: Float
}

type UserHowAmIPhrase {
  phrase: HowAmIPhrase!
  date: Float!
}

type Module {
  id: String!
  name: String!
  year: String!
}

type Assignments {
  name: String!
  date: Float!
  score: Float!
  percent: Float!
}

type UserModules {
  module: Module!
  assignments: [Assignments!]!
}

# ----- User Skills ------

type UserSkill {
  id: String!
  skill: String!
}

type Place {
  id: String!
  name: String!
  latitude: Float!
  longitude: Float!
  messages: [CommunityMessage]
}

type CommunityMessage {
  id: String!
  message: String!
  userId: String!
  date: Float!
  place: Place
  email: String!
  replies: [CommunityMessage]
}

type User {
  id: String!
  brand: UserBrand!
  mentalEnergy: [MentalEnergy!]!
  howAmIPhrase: [UserHowAmIPhrase!]!
  modules: [UserModules!]!
  skills: [UserSkill!]!
}

type Query {
  brandWords: [BrandWords!]!
  howAmIPhrase: [HowAmIPhrase!]!
  mentalEnergy: [MentalEnergy!]!
  currentUser: User!
  modules: [Module!]!
  places: [Place!]!
  CommunityMessage(placeId: String!): [CommunityMessage!]!
}

type Mutation {
  addMentalEnergy(level: Float!): MentalEnergy
  addHowAmIPhrase(id: String!): Boolean
  addBrandWord(wordId: String!): Boolean
  removeBrandWord(wordId: String!): Boolean
  # Take the current active brand, and save it as a past brand
  addWholeBrand(brandName: String!): Boolean
  addModule(moduleId: String!): Boolean
  removeModule(moduleId: String!): Boolean
  addAssignment(
    moduleId: String!
    name: String!
    score: Float!
    percent: Float!
  ): Boolean
  createPlace(name: String!, latitude: Float!, longitude: Float!): Boolean
  createCommunityMessage(message: String!, placeId: String!): Boolean
  deleteMessage(messageId: String!): Boolean
  addSkill(skill: String!, replacingSkillId: String): Boolean
}
